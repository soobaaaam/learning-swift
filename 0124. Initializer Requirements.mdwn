# Initializer Requirements
```swift
//Syntax
protocol ProtocolName {
    init(param)
    init?(param)
    init!(param)
}

//Example
protocol Figure {
    var name: String { get }
    init(n: String)
}

struct Rectangle: Figure {
    var name: String

    init(n: String) {
        name = n
    }
}
//Class는 모든 서브클래스에서 프로토콜의 요구사항을 충족시켜야한다. 그러므로 class에서는 required initializer를 선언해야한다.
class Circle: Figure {
    var name: String

    required init(n: String) {
        name = n
    }
}
//final class는 더이상 상속되지 않으므로 상속을 고려할 필요가 없다.
final class Triangle: Figure {
    var name: String

    init(n: String) {
        name = n
    }
}

class Oval: Circle {
    var prop: Int

    init() {
        prop = 0
        super.init(n: "Oval")
    }

    required convenience init(n: String) {
        self.init()
    }
}

protocol Grayscale {
    init?(white: Double)
}

struct Color: Grayscale {
    init(white: Double) {

    }
}
```
