# <Short-circuit Evaluation(단락평가)><br/><br/>

`false &&` : 두 번째가 어떤 것이 오든 false<br/>
`true ||` : 두 번째가 어떤 것이 오든 true<br/>
👉 두 번째 피연산자가 평가되지 않는 평가방식 : 단락평가(Short circuit Evaluation)<br/><br/>

```swift
var a = 1
var b = 1

func updateLeft() -> Bool {
    a += 1
    return true
}

func updateRight() -> Bool {
    b += 1
    return true
}

if updateLeft() || updateRight() {

}
a
b
```
👉 a = 2<br/>
👉 b = 1<br/><br/>

**updateLeft()가 true인데 OR연산자이므로 updateRight()의 값과 관계없이 true 결과값이 나온다**<br/>
**swift는 논리식을 평가할 때 결과를 얻는데 필요한 최소한의 코드만 실행한다**<br/><br/>

### <Side Effect><br/><br/>

*코드의 실행 결과에 인해서 값 또는 상태가 변경되는 것*<br/><br/>

👉 논리식에 side effect를 발생시킬 수 있는 코드가 포함되어 있으면 논리적인 오류가 발생할 가능성이 높아진다